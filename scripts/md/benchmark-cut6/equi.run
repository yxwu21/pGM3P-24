#!/bin/bash

#SBATCH --job-name=ALDH
#SBATCH --output=res_%j.out
#SBATCH --error=res_%j.err
#SBATCH --ntasks-per-node=1
#SBATCH --cpus-per-task=32
###SBATCH --exclusive
#SBATCH --mem=1G

###SBATCH --nodelist=gpu-0-1
###SBATCH --exclude=gpu-0-7,gpu-1-[0-9],gpu-2-[0-4]
###SBATCH --exclude=gpu-0-[0-9]

#########################################
# Macro setting for experiment related things
exp_name=$1
file_name=$2
cwrk=$3
output_dir_name=$4
temp0=$5


echo "********************************************************************************"
echo "Current experiment setting:"
echo "exp_name=$exp_name"
echo "file_name=$file_name"
echo "cwrk=$cwrk"
echo "output_dir_name=$output_dir_name"
echo "temp0=$temp0"
echo "********************************************************************************"

#########################################
# Set the AMBER ENV variables

source /home8/yxwu/AMBER/bin/pmemd-install.dipole/amber.sh
export PATH=/home8/yxwu/apps/bin/gcc-11.3.0/bin:$PATH
export LD_LIBRARY_PATH=/home8/yxwu/apps/bin/gcc-11.3.0/lib64:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/home8/yxwu/apps/bin/cuda-12.2.1/lib64:$LD_LIBRARY_PATH
export PATH=/home8/yxwu/apps/bin/openmpi-4.1.5/bin:$PATH

AMBERHOME=/home8/yxwu/AMBER/bin/pmemd-install.dipole

echo "AMBERHOME=$AMBERHOME"
echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
echo "HOSTNAME=$HOSTNAME"

echo "--------------------------------------------------------------------------------"
# Set the working directory
echo "Entering Working Directory"
#$ -cwd

# Set location of your original working directory
# current location of 01_min
echo $cwrk
cd $cwrk

#########################################
# Set the MD engine
exe=$AMBERHOME/bin/pmemd.MPI

DO_PARALLEL="mpirun -np 32 --oversubscribe"

#########################################
prefix=$file_name.nvt.pmemd
parmfile=$cwrk/prep_files/${file_name}.prmtop
coordfile=$cwrk/prep_files/${file_name}.restrt0

echo "--------------------------------------------------------------------------------"
echo "input files:"
echo "parmfile = $parmfile"
echo "coordfile = $coordfile"
echo "--------------------------------------------------------------------------------"

# Create experiment running output dir
# mkdir $output_dir_name
cd $output_dir_name

echo "Current Working Directory"
echo `pwd`

cat > mdin <<EOF
  single point calc.
 &cntrl
    imin=0, ! Perform MD
    nstlim=50000,   !Number of MD steps
    dt=0.002,       ! timestep = 2 fs
    ntx=1,          ! read the coordinates from the "inpcrd" file
    irest=0,
    ntpr=1000,
    ntwr=1000,
    ntwx=1000,
    
    tempi=100.0,
    temp0=298.0,
    ntt=1,          ! using Berendsen coupling algorithm to maintain constant temperature
    tautp=2.0,      ! The time constant for T coupling is 2 ps
    ig=-1           ! Random seed for thermostat
    ntb=1,          ! periodic boundary with constant volume
    ntp=0,          ! no pressure control
    ntc=2,          ! Bonds involving hydrogen are constrained with SHAKE algorithm
    ntf=2,          ! Bond interactions involving H-atoms omitted (use with NTC=2)
    cut=6,
!   ntr=0,          ! Turn on restraints
!   restraintmask=":1-21 & !@H=", !atoms to be restrained
!   restraint_wt=5.0,               ! force constant for restraint
    iwrap=1,        ! iwrap is turned on
 /
EOF

echo "--------------------------------------------------------------------------------"
echo "cmd:"
echo "$exe -O -o ${prefix}.out \
      -r ${prefix}.rst \
      -c $coordfile \
      -i $inputfile \
      -p $parmfile \
      -ref $coordfile \
      -x $prefix.nc"
echo "--------------------------------------------------------------------------------"

$DO_PARALLEL $exe -O -o ${prefix}.out \
      -r ${prefix}.rst \
      -c $coordfile \
      -i mdin \
      -p $parmfile \
      -ref $coordfile \
      -x $prefix.nc

####################################
echo "Local job completed"
echo `date`
exit
